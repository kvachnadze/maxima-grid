load("list_utils.mac");

/* from abs_integrate.mac */
safe_op(e) := block([inflag : true], if mapatom(e) then false else op(e));

draw_expanded_elemens_list: ['element];
draw_expanded_functions['element]: 'expand_element;

/* expansion of element(...) */
draw_element(c):= block([s], buildq([c], parametric( part(c(s), 1), part(c(s), 2), s, 0, 1)));
draw_vector(c):= block([body],
  body: subst('k=1/10,
    [vector('c(1-k), 'c(1)-'c(1-k)), vector('c(0), 'c(k)-'c(0))]),
  ev(body, 'c));
expand_element(el):= block([c: first(args(el)), ar: rest(args(el))],
  append([draw_element(c)], ar, draw_vector(c)));
/****/

draw_expanded_p(el):= block([prederror: true], member(verbify(safe_op(el)), draw_expanded_elemens_list));
draw_expanded_apply(el):= block([fun: draw_expanded_functions[verbify(safe_op(el))]], fun(el));
draw2d_expanded([l])::= block([nl: maplist_append_when(draw_expanded_apply, draw_expanded_p, l)],
    buildq([nl],
  draw2d(splice(nl))));


/*
load("draw");
load("draw2d_expanded.mac");
load("elements.mac");
[c1, c2, c3, c4]: create_par(0, 0, 10, 10);
draw2d_expanded(
  head_length=0.2,
  xrange=[-1, 2], yrange=[-1, 2],
  'color='red, element(c1), color='green, element(c2), 'color='blue, element(c3), 'color='magenta, element(c4));
*/
